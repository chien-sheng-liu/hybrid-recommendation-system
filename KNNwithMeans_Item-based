{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"「KNNwithMeans_Item-based」的副本","provenance":[{"file_id":"14ucVpQPsvzuJmzrJzntSonh_KsKVHpNq","timestamp":1622995701000}],"collapsed_sections":[],"authorship_tag":"ABX9TyNXNkXXzXetXObn1EtcU94O"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"jbhMZXxlCxO5"},"source":["## First Import"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K4tl9RLx_ZNc","executionInfo":{"status":"ok","timestamp":1622964473493,"user_tz":-120,"elapsed":34931,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"2b4c3cb6-6e94-46fa-ba57-13081e34f972"},"source":["! pip install scikit-surprise"],"execution_count":18,"outputs":[{"output_type":"stream","text":["Collecting scikit-surprise\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/97/37/5d334adaf5ddd65da99fc65f6507e0e4599d092ba048f4302fe8775619e8/scikit-surprise-1.1.1.tar.gz (11.8MB)\n","\u001b[K     |████████████████████████████████| 11.8MB 2.1MB/s \n","\u001b[?25hRequirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-surprise) (1.0.1)\n","Requirement already satisfied: numpy>=1.11.2 in /usr/local/lib/python3.7/dist-packages (from scikit-surprise) (1.19.5)\n","Requirement already satisfied: scipy>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-surprise) (1.4.1)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.7/dist-packages (from scikit-surprise) (1.15.0)\n","Building wheels for collected packages: scikit-surprise\n","  Building wheel for scikit-surprise (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for scikit-surprise: filename=scikit_surprise-1.1.1-cp37-cp37m-linux_x86_64.whl size=1617612 sha256=1f54cc9594820910447f8ab56cbeb9e9bc3d4ac24b86c00fea3584b1fa323a5b\n","  Stored in directory: /root/.cache/pip/wheels/78/9c/3d/41b419c9d2aff5b6e2b4c0fc8d25c538202834058f9ed110d0\n","Successfully built scikit-surprise\n","Installing collected packages: scikit-surprise\n","Successfully installed scikit-surprise-1.1.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tXhO9IVf_fU_","executionInfo":{"status":"ok","timestamp":1622964234606,"user_tz":-120,"elapsed":976,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}}},"source":["from sklearn.preprocessing import StandardScaler\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import os\n","from datetime import datetime\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from math import sqrt\n","import time\n","from scipy.sparse import csr_matrix\n","from sklearn.model_selection import train_test_split as train_test_split_sk"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zz9g4-pT_hVp","executionInfo":{"status":"ok","timestamp":1622964286271,"user_tz":-120,"elapsed":51668,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"0be4def9-a49f-4fa3-9203-65db39a47ad6"},"source":["from google.colab import drive\n","drive.mount('/content/drive',force_remount=True)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2TniDVMGAXZZ","executionInfo":{"status":"ok","timestamp":1622964288189,"user_tz":-120,"elapsed":1935,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"4df38bad-a019-4e3f-964c-ebe53da7e098"},"source":["##Load Movie Title data\n","df_titles = pd.read_csv('/content/drive/My Drive/Web Mining/Org. Dataset for Netflix/movie_titles.csv', encoding = \"ISO-8859-1\", delimiter=',', names=['id', 'release_year', 'title'])\n","print(df_titles.shape)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["(17770, 3)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DS5PKXhKB6EM","executionInfo":{"status":"ok","timestamp":1622964289289,"user_tz":-120,"elapsed":467,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"77678d26-6acd-4722-b2b3-de01864625a2"},"source":["df_ratings = pd.read_csv(\"/content/drive/My Drive/Web Mining/NEW_DATA/Truncated/truncated_ratings.csv\",nrows=10000, delimiter=';')\n","df_ratings.shape"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 5)"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"pVxdxrMfB_oB","executionInfo":{"status":"ok","timestamp":1622964292253,"user_tz":-120,"elapsed":1800,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}}},"source":["df_merged = pd.read_csv(\"/content/drive/My Drive/Web Mining/NEW_DATA/final_movies_metadata_linked.csv\", delimiter=';')"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"id":"y8bsWQYpCBtd","executionInfo":{"status":"ok","timestamp":1622964292257,"user_tz":-120,"elapsed":21,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"d2e00fca-2b8e-46cb-efc8-703d102530f9"},"source":["df_merged.rename(columns={'metadata_id' : 'movie_id', 'netflix_genres' : 'genre'}, inplace=True)\n","\n","df_merged.head()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>netflix_id</th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>movie_id</th>\n","      <th>imdb_id</th>\n","      <th>original_language</th>\n","      <th>overview</th>\n","      <th>tagline</th>\n","      <th>metadata_genres</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>402</td>\n","      <td>Pan Tadeusz</td>\n","      <td>1999</td>\n","      <td>4966</td>\n","      <td>tt0170351</td>\n","      <td>pl</td>\n","      <td>A grand and patriotic tale of Poland's struggl...</td>\n","      <td>NaN</td>\n","      <td>[{'id': 10752, 'name': 'War'}, {'id': 18, 'nam...</td>\n","      <td>Drama|History|Romance|War</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>17617</td>\n","      <td>Ginger</td>\n","      <td>1971</td>\n","      <td>89072</td>\n","      <td>tt0067133</td>\n","      <td>en</td>\n","      <td>The police suspect that a drug and forced-pros...</td>\n","      <td>Every man wanted her, no man could tame her! T...</td>\n","      <td>[{'id': 18, 'name': 'Drama'}, {'id': 28, 'name...</td>\n","      <td>Action|Crime|Drama</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>11805</td>\n","      <td>The Big Bounce</td>\n","      <td>2004</td>\n","      <td>12634</td>\n","      <td>tt0315824</td>\n","      <td>en</td>\n","      <td>A small-time con artist and a Hawaiian real es...</td>\n","      <td>It's all in who you trust</td>\n","      <td>[{'id': 35, 'name': 'Comedy'}, {'id': 80, 'nam...</td>\n","      <td>Comedy|Crime</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>459</td>\n","      <td>Basquiat</td>\n","      <td>1996</td>\n","      <td>549</td>\n","      <td>tt0115632</td>\n","      <td>en</td>\n","      <td>Director Julian Schnabel illustrates the portr...</td>\n","      <td>In 1981, A Nineteen-Year-Old Unknown Graffiti ...</td>\n","      <td>[{'id': 18, 'name': 'Drama'}, {'id': 36, 'name...</td>\n","      <td>Biography|Drama</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4607</td>\n","      <td>Melody Time</td>\n","      <td>1948</td>\n","      <td>13757</td>\n","      <td>tt0040580</td>\n","      <td>en</td>\n","      <td>Melody Time is an animated feature produced by...</td>\n","      <td>NaN</td>\n","      <td>[{'id': 10402, 'name': 'Music'}, {'id': 10751,...</td>\n","      <td>Animation|Comedy|Family|Musical</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0  ...                            genre\n","0           0  ...        Drama|History|Romance|War\n","1           1  ...               Action|Crime|Drama\n","2           2  ...                     Comedy|Crime\n","3           3  ...                  Biography|Drama\n","4           4  ...  Animation|Comedy|Family|Musical\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":289},"id":"kYF05GnROj8k","executionInfo":{"status":"ok","timestamp":1622964292258,"user_tz":-120,"elapsed":16,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"1d2020c9-c610-4ac6-b91b-cbcdb1f46115"},"source":["df_metadata=df_merged[['movie_id','title','release_year','overview','genre']]\n","df_metadata.fillna(\"\", inplace=True)\n","df_metadata.head()"],"execution_count":7,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4327: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  downcast=downcast,\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movie_id</th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>overview</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4966</td>\n","      <td>Pan Tadeusz</td>\n","      <td>1999</td>\n","      <td>A grand and patriotic tale of Poland's struggl...</td>\n","      <td>Drama|History|Romance|War</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>89072</td>\n","      <td>Ginger</td>\n","      <td>1971</td>\n","      <td>The police suspect that a drug and forced-pros...</td>\n","      <td>Action|Crime|Drama</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12634</td>\n","      <td>The Big Bounce</td>\n","      <td>2004</td>\n","      <td>A small-time con artist and a Hawaiian real es...</td>\n","      <td>Comedy|Crime</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>549</td>\n","      <td>Basquiat</td>\n","      <td>1996</td>\n","      <td>Director Julian Schnabel illustrates the portr...</td>\n","      <td>Biography|Drama</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13757</td>\n","      <td>Melody Time</td>\n","      <td>1948</td>\n","      <td>Melody Time is an animated feature produced by...</td>\n","      <td>Animation|Comedy|Family|Musical</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   movie_id  ...                            genre\n","0      4966  ...        Drama|History|Romance|War\n","1     89072  ...               Action|Crime|Drama\n","2     12634  ...                     Comedy|Crime\n","3       549  ...                  Biography|Drama\n","4     13757  ...  Animation|Comedy|Family|Musical\n","\n","[5 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"K7_xkEo1CEOF","executionInfo":{"status":"ok","timestamp":1622964314935,"user_tz":-120,"elapsed":430,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}}},"source":["Mapping_file = dict(zip(df_metadata.title.tolist(), df_metadata.movie_id.tolist()))"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QoC3nO_4OrR0","executionInfo":{"status":"ok","timestamp":1622964321442,"user_tz":-120,"elapsed":5526,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"f6f895b2-19cc-4ac1-dcef-e21f657a265b"},"source":["df_ratings = pd.read_csv(\"/content/drive/My Drive/Web Mining/NEW_DATA/Truncated/truncated_ratings.csv\", delimiter=';')\n","df_ratings.drop(['Unnamed: 0'], axis=1, inplace=True)\n","df_ratings.shape"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4265493, 4)"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"kRCAyQKoOuzz","executionInfo":{"status":"ok","timestamp":1622964321777,"user_tz":-120,"elapsed":3,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}}},"source":["#Create dictionary of movie_id to title so that we can use it later to determine title when recommending items\n","dict_id_title = df_merged.set_index(\"netflix_id\")[\"title\"].to_dict()"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"-nwzyo_lOwen","executionInfo":{"status":"ok","timestamp":1622964322665,"user_tz":-120,"elapsed":9,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"5e3e7828-484a-45dd-85ea-093636cae325"},"source":["##Create Movies dataframe to explore movie's avg rating and number of ratings received by user\n","df_titles = pd.DataFrame(df_ratings.groupby('movie_id')['rating'].mean())\n","df_titles['count'] = df_ratings.groupby('movie_id')['rating'].count()\n","df_titles[\"title\"] = pd.Series(dict_id_title)\n","df_titles.head().sort_values('count')"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","      <th>count</th>\n","      <th>title</th>\n","    </tr>\n","    <tr>\n","      <th>movie_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>12</th>\n","      <td>3.423810</td>\n","      <td>420</td>\n","      <td>My Favorite Brunette</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3.635535</td>\n","      <td>439</td>\n","      <td>WWE: The Rise &amp; Fall of ECW</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3.556656</td>\n","      <td>909</td>\n","      <td>Character</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2.872961</td>\n","      <td>2330</td>\n","      <td>7 Seconds</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3.088164</td>\n","      <td>4968</td>\n","      <td>What the #$*! Do We (K)now!?</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            rating  count                         title\n","movie_id                                               \n","12        3.423810    420          My Favorite Brunette\n","5         3.635535    439   WWE: The Rise & Fall of ECW\n","3         3.556656    909                     Character\n","17        2.872961   2330                     7 Seconds\n","8         3.088164   4968  What the #$*! Do We (K)now!?"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"vDuPgiTcOyiA","executionInfo":{"status":"ok","timestamp":1622964333236,"user_tz":-120,"elapsed":448,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"a9b31501-c93a-4aa9-a469-1b95115ef3c8"},"source":["df_users = pd.DataFrame(df_ratings.groupby('user_id')['rating'].mean())\n","df_users['count'] = df_ratings.groupby('user_id')['rating'].count()\n","df_users.sort_values(['count'])"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2481919</th>\n","      <td>3.419355</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>724599</th>\n","      <td>3.419355</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>1186037</th>\n","      <td>3.250000</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>1416038</th>\n","      <td>2.781250</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>184751</th>\n","      <td>3.968750</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1664010</th>\n","      <td>4.528994</td>\n","      <td>845</td>\n","    </tr>\n","    <tr>\n","      <th>2118461</th>\n","      <td>4.152403</td>\n","      <td>853</td>\n","    </tr>\n","    <tr>\n","      <th>2439493</th>\n","      <td>1.284553</td>\n","      <td>861</td>\n","    </tr>\n","    <tr>\n","      <th>387418</th>\n","      <td>1.930387</td>\n","      <td>905</td>\n","    </tr>\n","    <tr>\n","      <th>305344</th>\n","      <td>2.016520</td>\n","      <td>908</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>57357 rows × 2 columns</p>\n","</div>"],"text/plain":["           rating  count\n","user_id                 \n","2481919  3.419355     31\n","724599   3.419355     31\n","1186037  3.250000     32\n","1416038  2.781250     32\n","184751   3.968750     32\n","...           ...    ...\n","1664010  4.528994    845\n","2118461  4.152403    853\n","2439493  1.284553    861\n","387418   1.930387    905\n","305344   2.016520    908\n","\n","[57357 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"qfxf67RFO0Te","executionInfo":{"status":"ok","timestamp":1622964338076,"user_tz":-120,"elapsed":329,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}}},"source":["df_users_f = df_users.drop(df_users[df_users['count'] <150].index)\n","df_titles_f = df_titles.drop(df_titles[df_titles['count'] < 50].index)"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"udBM3kicO2VE","executionInfo":{"status":"ok","timestamp":1622964338539,"user_tz":-120,"elapsed":6,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"1b9e9dc4-6d60-48f8-b56b-cae2073d3e81"},"source":["print(df_titles.shape)\n","print(df_titles_f.shape)\n","print(df_users.shape)\n","print(df_users_f.shape)\n","\n","print('Preserved rate of the movies : {0:.2f} %'.format((df_titles_f.shape[0]/df_titles.shape[0]) * 100))\n","print('Preserved rate of the users : {0:.2f} %'.format((df_users_f.shape[0]/df_users.shape[0]) * 100))"],"execution_count":14,"outputs":[{"output_type":"stream","text":["(909, 3)\n","(900, 3)\n","(57357, 2)\n","(2225, 2)\n","Preserved rate of the movies : 99.01 %\n","Preserved rate of the users : 3.88 %\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nu5_MmOiO4eG","executionInfo":{"status":"ok","timestamp":1622964341294,"user_tz":-120,"elapsed":3,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"21d8b2ff-7906-40e0-99ee-4d70b2d7c5f7"},"source":["list_users_f = list(df_users_f.index.values)\n","list_titles_f = list(df_titles_f.index.values)\n","\n","print(len(list_users_f))\n","print(len(list_titles_f))"],"execution_count":15,"outputs":[{"output_type":"stream","text":["2225\n","900\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LZMKKPVWO6iO","executionInfo":{"status":"ok","timestamp":1622964346461,"user_tz":-120,"elapsed":1292,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"03dae5c5-c0a2-4189-9661-be4e310d0c89"},"source":["df_ratings_f = df_ratings[df_ratings['user_id'].isin(list_users_f)]\n","print(df_ratings.shape)\n","print(df_ratings_f.shape)\n"],"execution_count":16,"outputs":[{"output_type":"stream","text":["(4265493, 4)\n","(431752, 4)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"0Mbvn-CxCklE"},"source":["### Split"]},{"cell_type":"code","metadata":{"id":"f78b6eP0C0K0","executionInfo":{"status":"ok","timestamp":1622912744695,"user_tz":-120,"elapsed":1200,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}}},"source":["rawTrain = pd.read_csv(\"/content/drive/My Drive/Web Mining/NEW_DATA/Truncated/train_data_ratings.csv\",nrows=10000,delimiter=';')\n","rawTest = pd.read_csv(\"/content/drive/My Drive/Web Mining/NEW_DATA/Truncated/test_data_ratings.csv\",nrows=10000,delimiter=';')\n","rawTrain.drop(['Unnamed: 0'],1,inplace=True)\n","rawTest.drop(['Unnamed: 0'],1,inplace=True)"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"5GZAdeBbC4op","colab":{"base_uri":"https://localhost:8080/","height":368},"executionInfo":{"status":"error","timestamp":1622912755067,"user_tz":-120,"elapsed":252,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"3690e2b3-573f-40fe-e8e0-9a77ac254a23"},"source":["from surprise import Dataset, Reader, accuracy\n","from surprise.model_selection import train_test_split\n","\n","# Instantiate a reader with the specified rating scale\n","# and read in the rating data\n","reader = Reader(rating_scale=(0, 5))\n","\n","#into surprise:\n","train_data = Dataset.load_from_df(rawTrain,reader) #used to build validation set as well\n","test_data = Dataset.load_from_df(rawTest,reader)"],"execution_count":19,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-507c2cd189b7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0msurprise\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mDataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mReader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccuracy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msurprise\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel_selection\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Instantiate a reader with the specified rating scale\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# and read in the rating data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'surprise'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]},{"cell_type":"markdown","metadata":{"id":"fCCLCbz_C7Yy"},"source":["## Find Bast Model"]},{"cell_type":"markdown","metadata":{"id":"yCRE6N4XNwQv"},"source":["###Hyperparameter Tuning"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gnfo9z_OD2cv","executionInfo":{"status":"ok","timestamp":1622965609378,"user_tz":-120,"elapsed":1107293,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"70b06b91-8ad9-4260-8883-802495d3ee0e"},"source":["# Cross Validation\n","from sklearn.model_selection import train_test_split\n","from surprise.model_selection import cross_validate\n","from surprise import Dataset, Reader\n","from surprise import KNNWithMeans,KNNWithZScore\n","\n","reader = Reader(rating_scale=(0, 5))\n","trainset, testset = train_test_split(df_ratings_f[['user_id','movie_id','rating']], test_size=0.25, random_state=0)\n","df_test =pd.DataFrame(testset,columns= ['user_id','movie_id','rating'])\n","print (\"Test Data Size %i\" %len(df_test))\n","trainset = Dataset.load_from_df(trainset, reader)\n","data = Dataset.load_from_df(df_ratings_f[['user_id','movie_id','rating']], reader)\n","testset = testset.values.tolist()\n","\n","# Define the models and their hyperparameters \n","sim_option_user_cosine = {'name': 'cosine',\n","              'user_based': False  # compute similarities between items\n","               }\n","sim_option_user_pearson = {'name': 'pearson',\n","              'user_based': False  # compute similarities between items\n","}\n","\n","benchmark = []\n","i =0\n","alg_list = ['KNNWithMeans(k=30, sim=cosine, item-based)',\n","            'KNNWithMeans(k=40, sim=cosine, item-based)',\n","            'KNNWithMeans(k=50, sim=cosine, item-based)',\n","            'KNNWithMeans(k=30, sim=pearson, item-based)',\n","            'KNNWithMeans(k=40, sim=pearson, item-based)',\n","            'KNNWithMeans(k=50, sim=pearson, item-based)',\n","            'KNNWithZScore(k=30, sim=cosine, item-based)',\n","            'KNNWithZScore(k=40, sim=cosine, item-based)',\n","            'KNNWithZScore(k=50, sim=cosine, item-based)',\n","            'KNNWithZScore(k=30, sim=pearson, item-based)',\n","            'KNNWithZScore(k=40, sim=pearson, item-based)',\n","            'KNNWithZScore(k=50, sim=pearson, item-based)']\n","\n","for algorithm in [KNNWithMeans(k=30,sim_options=sim_option_user_cosine),\n","                 KNNWithMeans(k=40,sim_options=sim_option_user_cosine),\n","                 KNNWithMeans(k=50,sim_options=sim_option_user_cosine),\n","                 KNNWithMeans(k=30,sim_options=sim_option_user_pearson),\n","                 KNNWithMeans(k=40,sim_options=sim_option_user_pearson),\n","                 KNNWithMeans(k=50,sim_options=sim_option_user_pearson),\n","                 KNNWithZScore(k=30,sim_options=sim_option_user_cosine),\n","                 KNNWithZScore(k=40,sim_options=sim_option_user_cosine),\n","                 KNNWithZScore(k=50,sim_options=sim_option_user_cosine),\n","                 KNNWithZScore(k=30,sim_options=sim_option_user_pearson),\n","                 KNNWithZScore(k=40,sim_options=sim_option_user_pearson),\n","                 KNNWithZScore(k=50,sim_options=sim_option_user_pearson)]:\n","\n","    # Perform cross validation\n","    results = cross_validate(algorithm, trainset, measures=['RMSE','MAE'], cv=5, verbose=False)\n","\n","     # Get results & append algorithm name\n","    tmp = pd.DataFrame.from_dict(results).mean(axis=0)\n","    tmp = tmp.append(pd.Series([alg_list[i]], index=['Algorithm']))\n","    benchmark.append(tmp)\n","    i+=1\n","    pd.DataFrame(benchmark).set_index('Algorithm').sort_values('test_rmse')\n","    "],"execution_count":19,"outputs":[{"output_type":"stream","text":["Test Data Size 107938\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sSH_BEduTSwI","executionInfo":{"status":"ok","timestamp":1622966411226,"user_tz":-120,"elapsed":559686,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"2e419697-ffc0-4b2c-8cc1-f2483ee676ef"},"source":["alg_list1 = ['KNNWithZScore(k=30, sim=cosine, item-based)',\n","            'KNNWithZScore(k=40, sim=cosine, item-based)',\n","            'KNNWithZScore(k=50, sim=cosine, item-based)',\n","            'KNNWithZScore(k=30, sim=pearson, item-based)',\n","            'KNNWithZScore(k=40, sim=pearson, item-based)',\n","           'KNNWithZScore(k=50, sim=pearson, item-based)']\n","\n","\n","i = 0\n","for algorithm in [KNNWithZScore(k=30,sim_options=sim_option_user_cosine),\n","                 KNNWithZScore(k=40,sim_options=sim_option_user_cosine),\n","                 KNNWithZScore(k=50,sim_options=sim_option_user_cosine),\n","                 KNNWithZScore(k=30,sim_options=sim_option_user_pearson),\n","                 KNNWithZScore(k=40,sim_options=sim_option_user_pearson),\n","                 KNNWithZScore(k=50,sim_options=sim_option_user_pearson)]:\n","               \n","    # Perform cross validation\n","    results = cross_validate(algorithm, trainset, measures=['RMSE','MAE'], cv=5, verbose=False)\n","    \n","    # Get results & append algorithm name\n","    tmp = pd.DataFrame.from_dict(results).mean(axis=0)\n","    tmp = tmp.append(pd.Series([alg_list1[i]], index=['Algorithm']))\n","    benchmark.append(tmp)\n","    i+=1\n"],"execution_count":20,"outputs":[{"output_type":"stream","text":["Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n","Computing the pearson similarity matrix...\n","Done computing similarity matrix.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":638},"id":"aZII40VDXAY-","executionInfo":{"status":"ok","timestamp":1622966814989,"user_tz":-120,"elapsed":353,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"3bebc83e-bc6c-4dc0-e0df-9e020c9bc42e"},"source":["pd.DataFrame(benchmark).set_index('Algorithm').sort_values('test_rmse')"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>test_rmse</th>\n","      <th>test_mae</th>\n","      <th>fit_time</th>\n","      <th>test_time</th>\n","    </tr>\n","    <tr>\n","      <th>Algorithm</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>KNNWithMeans(k=30, sim=cosine, item-based)</th>\n","      <td>0.863503</td>\n","      <td>0.674414</td>\n","      <td>2.394580</td>\n","      <td>12.282263</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=30, sim=cosine, item-based)</th>\n","      <td>0.864068</td>\n","      <td>0.673357</td>\n","      <td>2.659243</td>\n","      <td>13.732112</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=30, sim=cosine, item-based)</th>\n","      <td>0.864137</td>\n","      <td>0.673729</td>\n","      <td>2.545198</td>\n","      <td>13.425595</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithMeans(k=40, sim=cosine, item-based)</th>\n","      <td>0.864758</td>\n","      <td>0.675911</td>\n","      <td>2.431217</td>\n","      <td>14.342541</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=40, sim=cosine, item-based)</th>\n","      <td>0.865310</td>\n","      <td>0.675146</td>\n","      <td>2.663713</td>\n","      <td>15.287549</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=40, sim=cosine, item-based)</th>\n","      <td>0.865759</td>\n","      <td>0.675305</td>\n","      <td>2.546786</td>\n","      <td>14.739697</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithMeans(k=50, sim=cosine, item-based)</th>\n","      <td>0.867535</td>\n","      <td>0.678576</td>\n","      <td>2.465466</td>\n","      <td>15.211511</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=50, sim=cosine, item-based)</th>\n","      <td>0.868043</td>\n","      <td>0.677761</td>\n","      <td>2.557161</td>\n","      <td>16.138599</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=50, sim=cosine, item-based)</th>\n","      <td>0.868188</td>\n","      <td>0.677939</td>\n","      <td>2.673664</td>\n","      <td>16.822826</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=40, sim=pearson, item-based)</th>\n","      <td>0.868910</td>\n","      <td>0.678767</td>\n","      <td>3.379696</td>\n","      <td>15.152477</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=40, sim=pearson, item-based)</th>\n","      <td>0.868913</td>\n","      <td>0.678777</td>\n","      <td>3.454586</td>\n","      <td>15.141702</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=50, sim=pearson, item-based)</th>\n","      <td>0.868969</td>\n","      <td>0.678958</td>\n","      <td>3.385075</td>\n","      <td>16.559480</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=50, sim=pearson, item-based)</th>\n","      <td>0.869024</td>\n","      <td>0.679108</td>\n","      <td>3.475110</td>\n","      <td>16.435621</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithMeans(k=50, sim=pearson, item-based)</th>\n","      <td>0.869613</td>\n","      <td>0.679425</td>\n","      <td>3.261605</td>\n","      <td>15.569145</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithMeans(k=40, sim=pearson, item-based)</th>\n","      <td>0.869792</td>\n","      <td>0.679177</td>\n","      <td>3.245102</td>\n","      <td>14.329901</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=30, sim=pearson, item-based)</th>\n","      <td>0.870415</td>\n","      <td>0.679668</td>\n","      <td>3.468314</td>\n","      <td>13.584627</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithZScore(k=30, sim=pearson, item-based)</th>\n","      <td>0.870508</td>\n","      <td>0.679467</td>\n","      <td>3.347871</td>\n","      <td>13.615786</td>\n","    </tr>\n","    <tr>\n","      <th>KNNWithMeans(k=30, sim=pearson, item-based)</th>\n","      <td>0.872003</td>\n","      <td>0.680515</td>\n","      <td>3.262477</td>\n","      <td>13.060353</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                              test_rmse  ...  test_time\n","Algorithm                                                ...           \n","KNNWithMeans(k=30, sim=cosine, item-based)     0.863503  ...  12.282263\n","KNNWithZScore(k=30, sim=cosine, item-based)    0.864068  ...  13.732112\n","KNNWithZScore(k=30, sim=cosine, item-based)    0.864137  ...  13.425595\n","KNNWithMeans(k=40, sim=cosine, item-based)     0.864758  ...  14.342541\n","KNNWithZScore(k=40, sim=cosine, item-based)    0.865310  ...  15.287549\n","KNNWithZScore(k=40, sim=cosine, item-based)    0.865759  ...  14.739697\n","KNNWithMeans(k=50, sim=cosine, item-based)     0.867535  ...  15.211511\n","KNNWithZScore(k=50, sim=cosine, item-based)    0.868043  ...  16.138599\n","KNNWithZScore(k=50, sim=cosine, item-based)    0.868188  ...  16.822826\n","KNNWithZScore(k=40, sim=pearson, item-based)   0.868910  ...  15.152477\n","KNNWithZScore(k=40, sim=pearson, item-based)   0.868913  ...  15.141702\n","KNNWithZScore(k=50, sim=pearson, item-based)   0.868969  ...  16.559480\n","KNNWithZScore(k=50, sim=pearson, item-based)   0.869024  ...  16.435621\n","KNNWithMeans(k=50, sim=pearson, item-based)    0.869613  ...  15.569145\n","KNNWithMeans(k=40, sim=pearson, item-based)    0.869792  ...  14.329901\n","KNNWithZScore(k=30, sim=pearson, item-based)   0.870415  ...  13.584627\n","KNNWithZScore(k=30, sim=pearson, item-based)   0.870508  ...  13.615786\n","KNNWithMeans(k=30, sim=pearson, item-based)    0.872003  ...  13.060353\n","\n","[18 rows x 4 columns]"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dqHqrQjXXcxp","executionInfo":{"status":"ok","timestamp":1622966952461,"user_tz":-120,"elapsed":35827,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"613e173f-b22d-4358-f9c8-db9e688fad5b"},"source":["from surprise import KNNWithZScore\n","\n","trainset = trainset.build_full_trainset()\n","\n","algorithm = KNNWithZScore(k=50,sim_options=sim_option_user_cosine)\n","\n","model_KnnwithMeans = algorithm.fit(trainset)\n","\n","predictions = model_KnnwithMeans.test(testset)"],"execution_count":23,"outputs":[{"output_type":"stream","text":["Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"GZl43OeqXHmV","executionInfo":{"status":"ok","timestamp":1622967033378,"user_tz":-120,"elapsed":348,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"f16f8850-ba66-44eb-a0a3-059dc4943262"},"source":["from collections import Counter\n","df_pred = pd.DataFrame(predictions,columns = ['user_id','movie_id','rating','pred_rating','details'])\n","df_pred.head(10)"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>movie_id</th>\n","      <th>rating</th>\n","      <th>pred_rating</th>\n","      <th>details</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2062350</td>\n","      <td>1058</td>\n","      <td>5</td>\n","      <td>3.366351</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1118103</td>\n","      <td>1103</td>\n","      <td>4</td>\n","      <td>3.341429</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>518137</td>\n","      <td>166</td>\n","      <td>4</td>\n","      <td>3.825158</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>46650</td>\n","      <td>1708</td>\n","      <td>3</td>\n","      <td>3.118663</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2495584</td>\n","      <td>1682</td>\n","      <td>3</td>\n","      <td>3.391443</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1728944</td>\n","      <td>947</td>\n","      <td>3</td>\n","      <td>3.490937</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2576843</td>\n","      <td>401</td>\n","      <td>2</td>\n","      <td>3.503263</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1090319</td>\n","      <td>285</td>\n","      <td>3</td>\n","      <td>2.859245</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>232877</td>\n","      <td>187</td>\n","      <td>2</td>\n","      <td>2.553712</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2543231</td>\n","      <td>165</td>\n","      <td>3</td>\n","      <td>3.797647</td>\n","      <td>{'actual_k': 50, 'was_impossible': False}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  movie_id  ...  pred_rating                                    details\n","0  2062350      1058  ...     3.366351  {'actual_k': 50, 'was_impossible': False}\n","1  1118103      1103  ...     3.341429  {'actual_k': 50, 'was_impossible': False}\n","2   518137       166  ...     3.825158  {'actual_k': 50, 'was_impossible': False}\n","3    46650      1708  ...     3.118663  {'actual_k': 50, 'was_impossible': False}\n","4  2495584      1682  ...     3.391443  {'actual_k': 50, 'was_impossible': False}\n","5  1728944       947  ...     3.490937  {'actual_k': 50, 'was_impossible': False}\n","6  2576843       401  ...     3.503263  {'actual_k': 50, 'was_impossible': False}\n","7  1090319       285  ...     2.859245  {'actual_k': 50, 'was_impossible': False}\n","8   232877       187  ...     2.553712  {'actual_k': 50, 'was_impossible': False}\n","9  2543231       165  ...     3.797647  {'actual_k': 50, 'was_impossible': False}\n","\n","[10 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"LsZqUMRpX9xz","executionInfo":{"status":"ok","timestamp":1622967055944,"user_tz":-120,"elapsed":388,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}}},"source":["# RecSys\n","def pred_user_rating(userid, num_recommend):\n","    if userid in df_ratings_f.user_id.unique():\n","        ui_list = df_ratings_f[df_ratings_f.user_id == user_id].movie_id.tolist()\n","        d = {k: v for k,v in Mapping_file.items() if not v in ui_list}        \n","        predictedL = []\n","        for i, j in d.items():     \n","            predicted = algorithm.predict(user_id, j)\n","            predictedL.append((i, predicted[3])) \n","        pdf = pd.DataFrame(predictedL, columns = ['movies', 'ratings'])\n","        pdf.sort_values('ratings', ascending=False, inplace=True)  \n","        pdf.set_index('movies', inplace=True)    \n","        return pdf.head(num_recommend)        \n","    else:\n","        print(\"User Id does not exist in the list!\")\n","        return None"],"execution_count":26,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"1GVnp2yIYA9n","executionInfo":{"status":"ok","timestamp":1622967265044,"user_tz":-120,"elapsed":25358,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"879cd77d-f455-4bb1-ac34-749c9e85f025"},"source":["user_id = int(input(\"Enter the user id to whom you want to recommend : \"))\n","num_recommend = int(input(\"Enter the number of movies you want to recommend : \"))\n","pred_user_rating(user_id, num_recommend)"],"execution_count":32,"outputs":[{"output_type":"stream","text":["Enter the user id to whom you want to recommend : 518137\n","Enter the number of movies you want to recommend : 8\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ratings</th>\n","    </tr>\n","    <tr>\n","      <th>movies</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Still Crazy</th>\n","      <td>4.433049</td>\n","    </tr>\n","    <tr>\n","      <th>AVP: Alien vs. Predator</th>\n","      <td>4.336452</td>\n","    </tr>\n","    <tr>\n","      <th>Lethal Weapon 3</th>\n","      <td>4.268882</td>\n","    </tr>\n","    <tr>\n","      <th>Constantine</th>\n","      <td>4.247131</td>\n","    </tr>\n","    <tr>\n","      <th>Bringing Up Baby</th>\n","      <td>4.239281</td>\n","    </tr>\n","    <tr>\n","      <th>Star Trek: The Motion Picture</th>\n","      <td>4.224933</td>\n","    </tr>\n","    <tr>\n","      <th>Ocean's Eleven</th>\n","      <td>4.217585</td>\n","    </tr>\n","    <tr>\n","      <th>Close Encounters of the Third Kind</th>\n","      <td>4.206254</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                     ratings\n","movies                                      \n","Still Crazy                         4.433049\n","AVP: Alien vs. Predator             4.336452\n","Lethal Weapon 3                     4.268882\n","Constantine                         4.247131\n","Bringing Up Baby                    4.239281\n","Star Trek: The Motion Picture       4.224933\n","Ocean's Eleven                      4.217585\n","Close Encounters of the Third Kind  4.206254"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":721},"id":"MEsUZLJ2Y4xe","executionInfo":{"status":"ok","timestamp":1622967294386,"user_tz":-120,"elapsed":468,"user":{"displayName":"Chien Sheng Liu","photoUrl":"","userId":"16399839600524258358"}},"outputId":"dba24229-74e9-4d57-bb88-22bfd9fe984f"},"source":["print(\"Get recommended movies metadata\")\n","rec_movies = pred_user_rating(user_id, num_recommend)\n","rec_moves_md = pd.merge(rec_movies, df_metadata , how='left', left_on='movies', right_on='title')[['title','release_year','overview','genre']]\n","display(rec_moves_md.head(10))\n","\n","\n","print(\"\")\n","print(\"Movies that User rated\")\n","user_movies = df_ratings_f[df_ratings_f.user_id==2062350].merge(df_metadata).sort_values('rating', ascending=False)\n","\n","user_movies.head(10)"],"execution_count":33,"outputs":[{"output_type":"stream","text":["Get recommended movies metadata\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>overview</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Still Crazy</td>\n","      <td>1998</td>\n","      <td>In the seventies Strange Fruit were it. They l...</td>\n","      <td>Comedy|Drama|Music|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AVP: Alien vs. Predator</td>\n","      <td>2004</td>\n","      <td>When scientists discover something in the Arct...</td>\n","      <td>Action|Adventure|Horror|Sci-Fi|Thriller</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Lethal Weapon 3</td>\n","      <td>1992</td>\n","      <td>Archetypal buddy cops Riggs and Murtaugh are b...</td>\n","      <td>Action|Crime|Thriller</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Constantine</td>\n","      <td>2005</td>\n","      <td>John Constantine has literally been to Hell an...</td>\n","      <td>Action|Fantasy|Horror|Mystery</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Bringing Up Baby</td>\n","      <td>1938</td>\n","      <td>David Huxley is waiting to get a bone he needs...</td>\n","      <td>Comedy|Family|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Star Trek: The Motion Picture</td>\n","      <td>1979</td>\n","      <td>When a destructive space entity is spotted app...</td>\n","      <td>Adventure|Mystery|Sci-Fi</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Ocean's Eleven</td>\n","      <td>1960</td>\n","      <td>Ocean's Eleven is the 'Rat-Pack' comedy about ...</td>\n","      <td>Comedy|Crime|Music|Thriller</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Ocean's Eleven</td>\n","      <td>2001</td>\n","      <td>Less than 24 hours into his parole, charismati...</td>\n","      <td>Crime|Thriller</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Close Encounters of the Third Kind</td>\n","      <td>1977</td>\n","      <td>After an encounter with UFOs, a line worker fe...</td>\n","      <td>Drama|Sci-Fi</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                title  ...                                    genre\n","0                         Still Crazy  ...               Comedy|Drama|Music|Romance\n","1             AVP: Alien vs. Predator  ...  Action|Adventure|Horror|Sci-Fi|Thriller\n","2                     Lethal Weapon 3  ...                    Action|Crime|Thriller\n","3                         Constantine  ...            Action|Fantasy|Horror|Mystery\n","4                    Bringing Up Baby  ...                    Comedy|Family|Romance\n","5       Star Trek: The Motion Picture  ...                 Adventure|Mystery|Sci-Fi\n","6                      Ocean's Eleven  ...              Comedy|Crime|Music|Thriller\n","7                      Ocean's Eleven  ...                           Crime|Thriller\n","8  Close Encounters of the Third Kind  ...                             Drama|Sci-Fi\n","\n","[9 rows x 4 columns]"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","Movies that User rated\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movie_id</th>\n","      <th>user_id</th>\n","      <th>rating</th>\n","      <th>rating_date</th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>overview</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>28</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2003-06-16</td>\n","      <td>Apocalypse Now</td>\n","      <td>1979</td>\n","      <td>At the height of the Vietnam war, Captain Benj...</td>\n","      <td>Drama|Mystery|War</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>862</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2005-01-04</td>\n","      <td>Toy Story</td>\n","      <td>1995</td>\n","      <td>Led by Woody, Andy's toys live happily in his ...</td>\n","      <td>Animation|Adventure|Comedy|Family|Fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>468</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2004-12-21</td>\n","      <td>My Own Private Idaho</td>\n","      <td>1991</td>\n","      <td>In this loose adaptation of Shakespeare's \"Hen...</td>\n","      <td>Drama</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>535</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2003-06-15</td>\n","      <td>Flashdance</td>\n","      <td>1983</td>\n","      <td>The popular 1980’s dance movie that depicts th...</td>\n","      <td>Drama|Music|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>571</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2003-06-17</td>\n","      <td>The Birds</td>\n","      <td>1963</td>\n","      <td>Chic socialite Melanie Daniels enjoys a passin...</td>\n","      <td>Drama|Horror|Mystery|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>615</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2003-06-16</td>\n","      <td>The Passion of the Christ</td>\n","      <td>2004</td>\n","      <td>\"The Passion of the Christ\" is a film about th...</td>\n","      <td>Drama</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>629</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2004-12-13</td>\n","      <td>The Usual Suspects</td>\n","      <td>1995</td>\n","      <td>Held in an L.A. interrogation room, Verbal Kin...</td>\n","      <td>Crime|Mystery|Thriller</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>640</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2003-06-23</td>\n","      <td>Catch Me If You Can</td>\n","      <td>2002</td>\n","      <td>A true story about Frank Abagnale Jr. who, bef...</td>\n","      <td>Biography|Crime|Drama</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>696</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2003-06-16</td>\n","      <td>Manhattan</td>\n","      <td>1979</td>\n","      <td>The life of a divorced television writer datin...</td>\n","      <td>Comedy|Drama|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>705</td>\n","      <td>2062350</td>\n","      <td>5</td>\n","      <td>2003-06-17</td>\n","      <td>All About Eve</td>\n","      <td>1950</td>\n","      <td>From the moment she glimpses her idol at the s...</td>\n","      <td>Drama</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    movie_id  ...                                      genre\n","0         28  ...                          Drama|Mystery|War\n","65       862  ...  Animation|Adventure|Comedy|Family|Fantasy\n","32       468  ...                                      Drama\n","37       535  ...                        Drama|Music|Romance\n","42       571  ...               Drama|Horror|Mystery|Romance\n","46       615  ...                                      Drama\n","48       629  ...                     Crime|Mystery|Thriller\n","50       640  ...                      Biography|Crime|Drama\n","55       696  ...                       Comedy|Drama|Romance\n","56       705  ...                                      Drama\n","\n","[10 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":33}]}]}